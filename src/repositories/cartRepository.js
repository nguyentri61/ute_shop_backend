import { PrismaClient } from "@prisma/client";

const prisma = new PrismaClient();

export const cartRepository = {
  /* ======================================================
     üîπ L·∫•y to√†n b·ªô cartItem c·ªßa user (bao g·ªìm variant + product)
  ====================================================== */
  async getCartByUserId(userId) {
    return prisma.cartItem.findMany({
      where: { userId },
      include: {
        variant: {
          select: {
            id: true,
            color: true,
            size: true,
            stock: true,
            price: true,
            discountPrice: true,
            product: {
              select: {
                id: true,
                name: true,
                description: true,
                productImage: {
                  take: 1,
                  select: { url: true },
                },
              },
            },
          },
        },
      },
      orderBy: { createdAt: "desc" },
    });
  },

  /* ======================================================
     üîπ L·∫•y c√°c cartItem theo ID
  ====================================================== */
  async getCartByIds(cartItemIds, client = prisma) {
    return client.cartItem.findMany({
      where: {
        id: { in: cartItemIds },
      },
      include: {
        variant: {
          select: {
            id: true,
            color: true,
            size: true,
            stock: true,
            price: true,
            discountPrice: true,
            product: {
              select: {
                id: true,
                name: true,
                productImage: {
                  take: 1,
                  select: { url: true },
                },
              },
            },
          },
        },
      },
    });
  },

  /* ======================================================
     üîπ L·∫•y cartItem theo ID
  ====================================================== */
  async findById(cartItemId) {
    return prisma.cartItem.findUnique({
      where: { id: cartItemId },
      include: {
        variant: {
          select: {
            id: true,
            color: true,
            size: true,
            stock: true,
            price: true,
            discountPrice: true,
            product: {
              select: {
                id: true,
                name: true,
                productImage: {
                  take: 1,
                  select: { url: true },
                },
              },
            },
          },
        },
      },
    });
  },

  /* ======================================================
     üîπ Th√™m ho·∫∑c c·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng cartItem
  ====================================================== */
  async addToCart(userId, variantId, quantity = 1) {
    return prisma.cartItem.upsert({
      where: {
        userId_variantId: { userId, variantId },
      },
      update: {
        quantity: { increment: quantity },
      },
      create: {
        userId,
        variantId,
        quantity,
      },
    });
  },

  /* ======================================================
     üîπ C·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng s·∫£n ph·∫©m trong gi·ªè h√†ng
  ====================================================== */
  async updateQuantity(cartItemId, quantity) {
    return prisma.cartItem.update({
      where: { id: cartItemId },
      data: { quantity },
    });
  },

  /* ======================================================
     üîπ X√≥a m·ªôt s·∫£n ph·∫©m trong gi·ªè h√†ng
  ====================================================== */
  async removeCartItem(cartItemId) {
    return prisma.cartItem.delete({
      where: { id: cartItemId },
    });
  },

  /* ======================================================
     üîπ X√≥a nhi·ªÅu s·∫£n ph·∫©m trong gi·ªè h√†ng (sau khi thanh to√°n)
  ====================================================== */
  async removeCartItems(cartItemIds, client = prisma) {
    return client.cartItem.deleteMany({
      where: { id: { in: cartItemIds } },
    });
  },

  /* ======================================================
     üîπ X√≥a to√†n b·ªô gi·ªè h√†ng c·ªßa user
  ====================================================== */
  async clearCart(userId) {
    return prisma.cartItem.deleteMany({
      where: { userId },
    });
  },
};
