generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model category {
  id        String    @id @default(uuid())
  name      String
  icon      String?
  createdAt DateTime  @default(now())
  product   product[]
}

model order {
  id        String   @id @default(uuid())
  userId    String
  address   String
  phone     String
  createdAt DateTime @default(now())
  total     Float    @default(0)
  status    String   @default("pending")

  user  user        @relation(fields: [userId], references: [id])
  items orderitem[] // 1 order có nhiều orderitem
}

model orderitem {
  id         String @id @default(uuid())
  orderId    String @map("order_id")
  variantId  String 
  quantity   Int
  price      Float @default(0)

  order    order    @relation(fields: [orderId], references: [id])
  variant  productVariant @relation(fields: [variantId], references: [id])

  @@index([orderId])
  @@index([variantId])

}

model product {
  id            String           @id @default(uuid())
  name          String
  description   String?
  price         Float
  discountPrice Float?
  stock         Int
  viewCount     Int              @default(0)
  createdAt     DateTime         @default(now())
  categoryId    String
  category      category         @relation(fields: [categoryId], references: [id], map: "Product_categoryId_fkey")
  productimage  productimage[]
  variants      productVariant[]

  @@index([categoryId], map: "Product_categoryId_fkey")
}

model productimage {
  id        String  @id @default(uuid())
  url       String
  productId String
  product   product @relation(fields: [productId], references: [id], map: "ProductImage_productId_fkey")

  @@index([productId], map: "ProductImage_productId_fkey")
}

model productVariant {
  id            String  @id @default(uuid())
  productId     String
  color         String?
  size          String?
  stock         Int
  price         Float
  discountPrice Float?

  product   product    @relation(fields: [productId], references: [id])
  cartItems cartItem[]
  orderItems orderitem[]

  @@index([productId])
}

model cartItem {
  id        String   @id @default(uuid())
  userId    String
  variantId String
  quantity  Int      @default(1)
  createdAt DateTime @default(now())

  user      user           @relation(fields: [userId], references: [id])
  variant   productVariant @relation(fields: [variantId], references: [id])

  @@unique([userId, variantId]) // 1 user chỉ có 1 cartItem cho 1 variant
  @@index([userId])
  @@index([variantId])

}

model user {
  id        String    @id @default(uuid())
  email     String    @unique(map: "User_email_key")
  password  String
  otp       String?
  otpExpiry DateTime?
  verified  Boolean   @default(false)
  createdAt DateTime  @default(now())
  address   String?
  fullName  String?
  gender    String?
  phone     String?

  orders order[]
  cart   cartItem[]
}
